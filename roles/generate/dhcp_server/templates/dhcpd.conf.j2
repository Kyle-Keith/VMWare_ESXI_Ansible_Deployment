default-lease-time 	300;
max-lease-time	800;

ddns-update-style none;

authoritative;

ping-check true;

#option grubmenu code 150 = text;

option space PXE;
option PXE.mtftp-ip code 1 = ip-address;
option PXE.mtftp-cport code 2 = unsigned integer 16;
option PXE.mtftp-sport code 3 = unsigned integer 16;
option PXE.mtftp-tmout code 4 = unsigned integer 8;
option PXE.mtftp-delay code 5 = unsigned integer 8;
option arch code 93 = unsigned integer 16; # RFC4578



subnet {{octet}}.0 netmask 255.255.255.192 {	
  option routers	{{octet}}.1;
  option subnet-mask 	255.255.255.192;
  option ntp-servers	{{octet}}.1;
  default-lease-time 	600;
  max-lease-time	1200;

host PA {
  hardware ethernet 00:50:56:b7:01:37;
  fixed-address {{octet}}.2;
}

{% for server_name, server_mac in server_macs.items() %}
{% if server_name.startswith('CP') %}
{% set server_data = all_vars[server_name] %}
{% set mac = server_mac | replace ('-',':') %}
host {{ server_name }} {
  hardware ethernet {{ mac }};
  fixed-address {{ server_data.server.IP }};
}
{% endif %}
{% endfor %}



}

allow booting;
allow bootp;
allow unknown-clients;
option client-system-arch code 93 = unsigned integer 16;
class "pxeclients" {
   match if substring(option vendor-class-identifier, 0, 9) = "PXEClient";
   next-server {{octet}}.1;
   if option client-system-arch = 00:07 or option client-system-arch = 00:09 {
      if exists user-class and option user-class = "iPXE" {
         # Instruct iPXE to load mboot.efi as secondary bootloader
         filename = "mboot.efi";
      } else {
         # Load the snponly.efi configuration of iPXE as initial bootloader
         filename = "snponly.efi";
      }
   } else {
      if exists user-class and option user-class = "iPXE" {
         # Instruct iPXE to load pxelinux as secondary bootloader
         filename = "pxelinux.0";
      } else {
         # Load the undionly configuration of iPXE as initial bootloader
         filename = "undionly.kpxe";
   }
}
}



subnet {{octet}}.208 netmask 255.255.255.240 {	
  option routers	{{octet}}.8;
  option subnet-mask 	255.255.255.240;
  option ntp-servers	{{octet}}.8;
  default-lease-time 	600;
  max-lease-time	1200;


{% for server_name, server_mac in server_macs.items() %}
{% if server_name.startswith('MR') %}
{% set mac = server_mac | replace ('-',':') %}
{% set server_data = all_vars[server_name] %}
host {{ server_name }} {
  hardware ethernet {{ mac }};
  fixed-address {{ server_data.server.IP }};
}
{% endif %}
{% endfor %}

}

allow booting;
allow bootp;
allow unknown-clients;
option client-system-arch code 93 = unsigned integer 16;
class "pxeclients" {
   match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
   next-server {{octet}}.8;

   if option client-system-arch = 00:07 {
      filename "grubx64.efi"; # for UEFI client
   } 
   else {
      filename "pxelinux.0"; # for legacy client
   }

option subnet-mask 255.255.255.240;
option routers {{octet}}.8;
}

